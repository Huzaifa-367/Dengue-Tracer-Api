<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<PropertyGroup>
		<UnoUIMSBuildTasksPath Condition="'$(UnoUIMSBuildTasksPath)'==''">Uno.UI.Tasks</UnoUIMSBuildTasksPath>
		<UmbrellaMSBuildTasksImported>true</UmbrellaMSBuildTasksImported>
		
		<_IsXamlTrimmingAvailable>true</_IsXamlTrimmingAvailable>
		<_IsXamlTrimmingAvailable Condition="'$(MSBuildRuntimeType)'!='Core' and !$([MSBuild]::IsOSPlatform('windows'))">false</_IsXamlTrimmingAvailable>
	</PropertyGroup>

	<ItemGroup>
		<UnoSourceGeneratorBeforeTarget Condition="'$(XamarinProjectType)'=='android'" Include="UpdateAndroidAssets" />
	</ItemGroup>

	<Import Project="uno.ui.tasks.assets.targets"/>

	<UsingTask AssemblyFile="$(UnoUIMSBuildTasksPath)\Uno.UI.Tasks.vfacdc38cd5d06f2dc1dbd8b7360079525999989f.dll" TaskName="Uno.UI.Tasks.ResourcesGenerator.ResourcesGenerationTask_vfacdc38cd5d06f2dc1dbd8b7360079525999989f" />
	<UsingTask AssemblyFile="$(UnoUIMSBuildTasksPath)\Uno.UI.Tasks.vfacdc38cd5d06f2dc1dbd8b7360079525999989f.dll" TaskName="Uno.UI.Tasks.Assets.RetargetAssets_vfacdc38cd5d06f2dc1dbd8b7360079525999989f" />
	<UsingTask AssemblyFile="$(UnoUIMSBuildTasksPath)\Uno.UI.Tasks.vfacdc38cd5d06f2dc1dbd8b7360079525999989f.dll" TaskName="Uno.UI.Tasks.LinkerHintsGenerator.LinkerHintGeneratorTask_vfacdc38cd5d06f2dc1dbd8b7360079525999989f" TaskFactory="TaskHostFactory" />
	<UsingTask AssemblyFile="$(UnoUIMSBuildTasksPath)\Uno.UI.Tasks.vfacdc38cd5d06f2dc1dbd8b7360079525999989f.dll" TaskName="Uno.UI.Tasks.LinkerHintsGenerator.LinkerDefinitionMergerTask_vfacdc38cd5d06f2dc1dbd8b7360079525999989f" TaskFactory="TaskHostFactory" />
	<UsingTask AssemblyFile="$(UnoUIMSBuildTasksPath)\Uno.UI.Tasks.vfacdc38cd5d06f2dc1dbd8b7360079525999989f.dll" TaskName="Uno.UI.Tasks.EmbeddedResourceInjector.EmbeddedResourceInjectorTask_vfacdc38cd5d06f2dc1dbd8b7360079525999989f" TaskFactory="TaskHostFactory" />

	<Target Name="_UnoLangSetup">
		<!-- String resources -->
		<PropertyGroup>
			<!-- LEGACY: Old projects define DefaultApplicationLanguage instead of DefaultLanguage -->
			<DefaultLanguage Condition="'$(DefaultLanguage)'=='' and '$(DefaultApplicationLanguage)'!=''">$(DefaultApplicationLanguage)</DefaultLanguage>
			<!-- Default to English if DefaultLanguage isn't set -->
			<DefaultLanguage Condition="'$(DefaultLanguage)'==''">en</DefaultLanguage>
		</PropertyGroup>
	</Target>

	<PropertyGroup>
		<!--
		Ensures that AssignLinkMetadata runs before AssignTargetPaths.
		Otherwise, AssignTargetPath will generate a rooted path and will break embedded sources
		LogicalName metadata's behavior.
		-->
		<AssignTargetPathsDependsOn>$(AssignTargetPathsDependsOn);AssignLinkMetadata</AssignTargetPathsDependsOn>
	</PropertyGroup>

	<!--
	  This task transforms all the Content files and PRIResources into resources files compatible for each platform.

	  Note: For iOS and Android, it must be run early in the build process, but no publicly stable target is available
	  to inject Uno properly. Failing to add this task early enough makes X.A and X.I miss the generated resource files.
	-->
	<Target Name="UnoResourcesGeneration"
				BeforeTargets="_GetLibraryImports;PrepareForBuild;_CheckForContent;_CollectBundleResources"
				DependsOnTargets="ResolveProjectReferences;_UnoLangSetup"
				Condition="'$(DesignTimeBuild)' != 'true' and '$(BuildingInsideUnoSourceGenerator)' == ''">

		<CheckForDevenv Condition="'$(SolutionFileName)'=='Uno.UI.sln' and '$(MSBuildRuntimeType)'!='Core'" />

		<PropertyGroup>
			<!-- String resources -->
			<XamarinProjectType Condition="'$(UnoForceProcessPRIResource)'!=''"></XamarinProjectType>

			<!-- Determine UnoHead (with xamarin heads detection) -->
			<_IsUnoHead>false</_IsUnoHead>
			<_IsUnoHead Condition="'$(IsUnoHead)'=='true' or '$(AndroidApplication)'=='true' or '$(ProjectTypeGuids)'!=''">true</_IsUnoHead>
		</PropertyGroup>

		<ItemGroup>
			<_UnoTempPRIResource Include="@(PRIResource)" />
		</ItemGroup>

		<!-- Assign the Link property so files defined in shared projects preserve their natural path structure -->
		<AssignLinkMetadata Items="@(PRIResource)"
							Condition="'@(PRIResource)' != '' and '%(PRIResource.DefiningProjectFullPath)' != '$(MSBuildProjectFullPath)'">
			<Output TaskParameter="OutputItems" ItemName="_Temp" />
		</AssignLinkMetadata>

		<ItemGroup>
			<!-- remove new linked items so their new metadata is used instead -->
			<_UnoTempPRIResource Remove="@(_Temp)" />
			<_UnoTempPRIResource Include="@(_Temp)" />

			<!-- Clear temporary group -->
			<_Temp Remove="@(_Temp)" />
		</ItemGroup>

		<AssignTargetPath Files="@(_UnoTempPRIResource)" RootFolder="$(MSBuildProjectDirectory)">
			<Output TaskParameter="AssignedFiles" ItemName="PRIResourceWithTargetPath" />
		</AssignTargetPath>

		<ResourcesGenerationTask_vfacdc38cd5d06f2dc1dbd8b7360079525999989f Resources="@(PRIResourceWithTargetPath)"
									 TargetProjectDirectory="$(ProjectDir)"
									 TargetPlatform="$(XamarinProjectType)"
									 IntermediateOutputPath="$(IntermediateOutputPath)"
									 DefaultLanguage="$(DefaultLanguage)"
									 IsUnoHead="$(_IsUnoHead)"
									 ProjectName="$(AssemblyName)"
									 EnableTraceLogging="$(UnoResourcesGenerationEnableTraceLogging)">
			<Output TaskParameter="GeneratedFiles"
							ItemName="GeneratedFiles" />
		</ResourcesGenerationTask_vfacdc38cd5d06f2dc1dbd8b7360079525999989f>
		<ItemGroup>
			<BundleResource Condition="'%(GeneratedFiles.UnoResourceTarget)' =='iOS'" Include="@(GeneratedFiles)" />
			<AndroidResource Condition="'%(GeneratedFiles.UnoResourceTarget)' =='Android'" Include="@(GeneratedFiles)" />
			<EmbeddedResource Condition="'%(GeneratedFiles.UnoResourceTarget)' =='Uno'" Include="@(GeneratedFiles)" />

			<!-- Clear temporary group -->
			<_UnoTempPRIResource Remove="@(_UnoTempPRIResource)" />
		</ItemGroup>
	</Target>

	<Target Name="_UnoExcludeFromAndroidContentCheck" BeforeTargets="_CheckForContent" Condition="'$(MonoAndroidAssetsPrefix)'!=''">
		<!--
		Disables "XA0101 build action is not supported" as Uno handles Content items explicitly
		https://github.com/xamarin/xamarin-android/blob/311b41e864a0162895d079477cb9398fbec5ca6e/src/Xamarin.Android.Build.Tasks/Xamarin.Android.Common.targets#L833
		-->
		<ItemGroup>
			<Content Update="@(Content)" ExcludeFromContentCheck="true" />
		</ItemGroup>
	</Target>

	<Target Name="UnoAssetsGeneration"
				BeforeTargets="_GetLibraryImports;_CheckForContent;_CollectBundleResources;_CompileAppManifest"
				DependsOnTargets="ResolveProjectReferences;GetCopyToOutputDirectoryItems;_UnoLangSetup"
				Condition="
				'$(DesignTimeBuild)' != 'true'
				and '$(BuildingInsideUnoSourceGenerator)' == ''
				and ('$(IsUnoHead)'=='true'
					or '$(AndroidApplication)'=='true'
					or '$(ProjectTypeGuids)'!='')">
		<!-- Assets -->
		<PropertyGroup>
			<UseHighDPIResources Condition="'$(UseHighDPIResources)'==''">True</UseHighDPIResources>
			
			<_UnoIosAppManifest>$(AppBundleManifest)</_UnoIosAppManifest>

			<!-- Required for older Xamarin versions -->
			<_UnoIosAppManifest Condition="'$(_UnoIosAppManifest)'==''">$(_AppManifest)</_UnoIosAppManifest>
		</PropertyGroup>
		
		<RetargetAssets_vfacdc38cd5d06f2dc1dbd8b7360079525999989f UseHighDPIResources="$(UseHighDPIResources)"
							TargetPlatform="$(XamarinProjectType)"
							DefaultLanguage="$(DefaultLanguage)"
							IntermediateOutputPath="$(IntermediateOutputPath)"
							ContentItems="@(Content);@(_SourceItemsToCopyToOutputDirectory)"
							AndroidAssetsPrefix="$(MonoAndroidAssetsPrefix)"
							IosAppManifest="$(_UnoIosAppManifest)"
							Condition="'$(XamarinProjectType)'!=''">
			<Output TaskParameter="Assets"
							ItemName="Assets" />
			<Output TaskParameter="RetargetedAssets"
							ItemName="RetargetedAssets" />
			<Output TaskParameter="PartialAppManifests"
							ItemName="PartialAppManifest" />
		</RetargetAssets_vfacdc38cd5d06f2dc1dbd8b7360079525999989f>
		<ItemGroup>
			<Content Remove="@(Assets)" />
		</ItemGroup>
		<ItemGroup Condition="'$(XamarinProjectType)'=='ios'">
			<BundleResource Condition="'%(RetargetedAssets.AssetType)' == 'image'" Include="@(RetargetedAssets)" />
			<BundleResource Condition="'%(RetargetedAssets.AssetType)' == 'generic'" Include="@(RetargetedAssets)" />
		</ItemGroup>
		<ItemGroup Condition="'$(XamarinProjectType)'=='android'">
			<AndroidResource Condition="'%(RetargetedAssets.AssetType)' =='image'" Include="@(RetargetedAssets)" />
			<AndroidAsset Condition="'%(RetargetedAssets.AssetType)' =='generic'" Include="@(RetargetedAssets)" />
		</ItemGroup>
	</Target>

	<!--
	  XAML Resources Trimming
	  -->

	<Target Name="_UnoLinkerHintsSubstitutionsMerge"
		Condition="
		'$(DesignTimeBuild)' != 'true'
		and '$(BuildingInsideUnoSourceGenerator)' == ''
		and '$(SkipCompilerExecution)' == ''
		and '$(UnoXamlResourcesTrimming)'=='true'
		and $(_IsXamlTrimmingAvailable)"
		AfterTargets="CoreCompile">

		<ItemGroup>
			<_SubstitutionFiles Include="@(UnoLinkerSubstitution)" />
			<_SubstitutionFiles Include="$(IntermediateOutputPath)\Substitutions\*.Substitutions.xml" />
		</ItemGroup>

		<LinkerDefinitionMergerTask_vfacdc38cd5d06f2dc1dbd8b7360079525999989f
			DefinitionFiles="@(_SubstitutionFiles)"
			TargetDefinitionFile="$(IntermediateOutputPath)ILLink.Substitutions.xml"
		/>

		<ItemGroup>
			<EmbeddedResource Include="$(IntermediateOutputPath)ILLink.Substitutions.xml" LogicalName="ILLink.Substitutions.xml" />
		</ItemGroup>

	</Target>

	<ItemGroup>
		<_UnoEmbeddedResourcesInjectionAfterTargets Include="CoreCompile" />
		<_UnoEmbeddedResourcesInjectionAfterTargets Include="_UnoLinkerHintsSubstitutionsMerge" />
	</ItemGroup>

	<Target Name="_UnoEmbeddedResourcesInjection"
	  Condition="
		'$(DesignTimeBuild)' != 'true'
		and '$(BuildingInsideUnoSourceGenerator)' == ''
		and '$(SkipCompilerExecution)' == ''
		and ('$(UnoXamlResourcesTrimming)'=='true' or '$(UnoRewriteEmbeddedResources)'=='true')
		and $(_IsXamlTrimmingAvailable)"
		AfterTargets="@(_UnoEmbeddedResourcesInjectionAfterTargets)">

		<ItemGroup>
			<!-- Filter ReferenceCopyLocalPaths as it may contain pdbs as well -->
			<_UnoEmbeddedResourcesInjectionAssembliesForReferencePaths
					Include="@(ReferencePath)"
				  Condition="'%(Extension)' == '.dll'" />
		</ItemGroup>

		<EmbeddedResourceInjectorTask_vfacdc38cd5d06f2dc1dbd8b7360079525999989f
			EmbeddedResources="@(EmbeddedResource)"
			TargetAssembly="$(IntermediateOutputPath)$(TargetFileName)"
			ReferencePath="@(_UnoEmbeddedResourcesInjectionAssembliesForReferencePaths)"
			  />
	</Target>

	<Target Name="_UnoLinkerHintsPass1"
		  Condition="
			'$(IsUnoHead)'=='true'
			and '$(UnoXamlResourcesTrimming)'=='true'
			and $(_IsXamlTrimmingAvailable)"
		  BeforeTargets="BuildDist;PrepareForILLink">

		<ItemGroup>
			<!-- Filter ReferenceCopyLocalPaths as it may contain pdbs as well -->
			<_UnoLinkerHintsPass1AssembliesForReferencePaths
					Include="@(ReferencePath)"
					Condition="'%(Extension)' == '.dll'" />
		</ItemGroup>

		<PropertyGroup>
			<_UnoLinkerHintGeneratorILLinkerPath>$(MSBuildThisFileDirectory)\..\tools\linker</_UnoLinkerHintGeneratorILLinkerPath>

			
			<_UnoLinkerHintGeneratorILLinkerPath
				Condition="
				'$(TargetFrameworkIdentifier)'=='.NETCoreApp'
				and $([MSBuild]::VersionGreaterThanOrEquals($(TargetFrameworkVersion), '6.0'))
				and '$(ILLinkTasksAssembly)'!=''"
			>$([System.IO.Path]::GetDirectoryName($(ILLinkTasksAssembly)))\..\net$(BundledNETCoreAppTargetFrameworkVersion)</_UnoLinkerHintGeneratorILLinkerPath>

			<_UnoUIPackageBasePath
				Condition="
					'%(UnoRuntimeEnabledPackage.Identity)'=='Uno.UI'
					or '%(UnoRuntimeEnabledPackage.Identity)'=='Uno.WinUI'"
				>%(UnoRuntimeEnabledPackage.PackageBasePath)</_UnoUIPackageBasePath>
		</PropertyGroup>

		<LinkerHintGeneratorTask_vfacdc38cd5d06f2dc1dbd8b7360079525999989f
			CurrentProjectPath="$(MSBuildProjectDirectory)"
			AssemblyPath="$(IntermediateOutputPath)$(TargetFileName)"
			OutputPath="$(ProjectDir)$(IntermediateOutputPath)/linkerhints"
			ReferencePath="@(_UnoLinkerHintsPass1AssembliesForReferencePaths)"
			ILLinkerPath="$(_UnoLinkerHintGeneratorILLinkerPath)"
			TargetFramework="$(TargetFramework)"
			TargetFrameworkVersion="$(TargetFrameworkVersion.Substring(1))"
			UnoUIPackageBasePath="$(_UnoUIPackageBasePath)"
			UnoRuntimeIdentifier="$(UnoRuntimeIdentifier)">
			<Output TaskParameter="OutputFeatures"
					 ItemName="_LinkerHintOutputFeatures" />
		</LinkerHintGeneratorTask_vfacdc38cd5d06f2dc1dbd8b7360079525999989f>

		<ItemGroup>
			<RuntimeHostConfigurationOption Include="@(_LinkerHintOutputFeatures)" Trim="true" />
		</ItemGroup>
	</Target>

	<Target Name="_ValidateBootstraperVersion"
			BeforeTargets="BeforeBuild"
			Condition="'$(IsUnoHead)'=='true' and '$(UnoXamlResourcesTrimming)'=='true'">
		<ItemGroup>
			<_UnoWasmBootstrapVersion Include="@(PackageReference->'%(Version)')"
									  Condition="'%(Identity)'=='Uno.Wasm.Bootstrap'"/>
		</ItemGroup>
		<PropertyGroup>
			<_UnoWasmBootstrapVersionString>@(_UnoWasmBootstrapVersion)</_UnoWasmBootstrapVersionString>
		</PropertyGroup>

		<Error Text="UnoXamlResourcesTrimming cannot be used with the current Uno.Wasm.Bootstrap package version (Found $(_UnoWasmBootstrapVersionString), 3.0 or later is needed)"
			   Condition="'$(_UnoWasmBootstrapVersionString)'!='' and '$(_UnoWasmBootstrapVersionString.Split(`-`)[0])'&lt;'3.0'"/>
	</Target>

	<!--
    Warn when the task is executed in devenv.exe: https://github.com/dotnet/project-system/issues/4494
    -->

	<UsingTask
  TaskName="CheckForDevenv"
  TaskFactory="CodeTaskFactory"
  AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" >
		<ParameterGroup />
		<Task>
			<Reference Include="System.Xml"/>
			<Using Namespace="System"/>
			<Using Namespace="System.IO"/>
			<Code Type="Fragment" Language="cs">
				<![CDATA[  
            if (System.Diagnostics.Process.GetCurrentProcess().ProcessName.Equals("devenv", System.StringComparison.OrdinalIgnoreCase))
            {
              Log.LogWarning("The Uno.UI.Tasks build task is running under devenv.exe you will have to restart Visual Studio to rebuild it.");
            }
          ]]>
			</Code>
		</Task>
	</UsingTask>

</Project>
